*quickfix-preview.txt*                                Last change: 2025 May 26

==============================================================================
Table of Contents                         *quickfix-preview-table-of-contents*

Sample configuration ................. |quickfix-preview-sample-configuration|

==============================================================================
QUICKFIX-PREVIEW.NVIM                 *quickfix-preview-quickfix-preview.nvim*


A simple preview for quickfix list, updates as you move your cursor.

demo <https://elanmed.dev/nvim-plugins/quickfix-preview.gif>


------------------------------------------------------------------------------
SAMPLE CONFIGURATION                   *quickfix-preview-sample-configuration*


>lua
    require "quickfix-preview".setup {
      -- Options to apply to the preview window. Defaults to an empty table
      preview_win_opts = {
        number = true,
        relativenumber = false,
        signcolumn = "no",
        cursorline = true,
      },
      -- A prefix passed to :pedit, can be used to position the preview window. Defaults to `aboveleft`
      pedit_prefix = "aboveleft", 
      -- A postfix passed to :pedit. Defaults to an empty string
      pedit_postfix = "",
      -- By default, no keymaps are set
      keymaps = {
        -- Toggle the quickfix preview
        toggle = "t",
        -- Open the file undor the cursor, keeping the quickfix list open
        select_close_preview = "o",
        -- Open the file under the cursor, closing the quickfix list
        select_close_qf_list = "<cr>",
        -- :cnext, preserving focus on the quickfix list
        next = {
          key = "<C-n>",
          -- Loop around to the beginning of the quickfix list when reaching the end
          -- `circular` defaults to `true` for `next`, `prev`, `cnext`, and `cprev`
          circular = true,
        },
        -- :cprev, preserving focus on the quickfix list
        prev = { key = "<C-n>", },
        -- :cnext, closing the preview first
        cnext = { key = "]q", },
        -- :cprev, closing the preview first
        cprev = { key = "[q", },
      },
    }
<

vim:tw=78:ts=8:ft=help:norl: